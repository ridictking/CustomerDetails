@page "/fetchdata"

@using BlazorDemo.Data
@using BlazorDemo.Service
@inject WeatherForecastService ForecastService
@inject ICustomerDetailService CustomerService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>
@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}
@if (customerDetailModels == null)
{
    <p><em>Customer details loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Description</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in customerDetailModels)
            {
                <tr>
                    <td>@item.CustomerOrderId</td>
                    <td>@item.FirstName</td>
                    <td>@item.LastName</td>
                    <td>@item.Description</td>
                    <td>@item.Price</td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    private WeatherForecast[] forecasts;
    private IList<CustomerDetailModel> customerDetailModels = new List<CustomerDetailModel>();

    protected void Onclick()
    {
        customerDetailModels = CustomerService.GetList();
    }

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }
}
